{% block form_row %}
{% spaceless %}
    <div class="control-group {% if errors|length > 0 %}error{% endif %}">
        {% if 'checkbox' not in form.vars.block_prefixes %}
            {{ form_label(form, label|default(null)) }}
        {% endif %}
         <div class="controls">
            {{ form_widget(form) }}

            {#
            If the child is a compound form, the errors are rendered inside
            the container. See also block form_rows.
            #}
            {% if not compound %}
                {{ form_errors(form) }}
            {% endif %}
        </div>
    </div>
{% endspaceless %}
{% endblock form_row %}

{% block form_label %}
{% spaceless %}
    {% if not compound %}
        {% set label_attr = label_attr|merge({'for': id}) %}
    {% endif %}
    {% if required %}
        {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
    {% endif %}
    {% if label is empty %}
        {% set label = name|humanize %}
    {% endif %}

    {# Twitter bootstrap class #}
    {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' control-label')|trim}) %}

    <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>{{ label|trans({}, translation_domain) }}</label>
{% endspaceless %}
{% endblock form_label %}

{% block checkbox_widget %}
{% spaceless %}
    {% if label is empty %}
        {% set label = name|humanize %}
    {% endif %}
    <label class="checkbox">
        <input type="checkbox" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} />
        {{ label|trans({}, translation_domain) }}
    </label>
{% endspaceless %}
{% endblock checkbox_widget %}

{% block form_errors %}
{% spaceless %}
    {% for error in errors %}
        <span class="help-inline">{{
            error.messagePluralization is null
                ? error.messageTemplate|trans(error.messageParameters, 'validators')
                : error.messageTemplate|transchoice(error.messagePluralization, error.messageParameters, 'validators')
        }}</span>
    {% endfor %}
{% endspaceless %}
{% endblock form_errors %}
